---
import BentoItem from "@/components/BentoItem.astro";
import { getI18N } from "@/i18n/";

const { currentLocale } = Astro;
const i18n = getI18N({ currentLocale });
---

<section
  class={`
    w-full max-w-[1400px]
    grid lg:grid-cols-10 auto-rows-[30rem] gap-4
    mx-auto p-6 md:p-12 lg:p-20
  `}
>
  <BentoItem class="col-span-10 lg:col-span-4" title={i18n.BENTO_TITLE_1}>
    <div
      slot="image"
      class="background transition-scale absolute bottom-0 left-0 top-0
        -z-10 h-full w-full bg-black
        bg-cover bg-center bg-no-repeat opacity-90 bg-blend-luminosity duration-1000 ease-in-out group-hover:scale-110"
      data-src="/BuggatiChiron.webp"
    >
    </div>
  </BentoItem>
  <BentoItem
    class="col-span-10 lg:col-span-6"
    title={i18n.BENTO_TITLE_2}
    subtitle={i18n.BENTO_SUBTITLE_2}
  >
    <div
      slot="image"
      class="background transition-scale absolute bottom-0 left-0 top-0
    -z-10 h-full w-full bg-black
    bg-cover bg-center bg-no-repeat opacity-90 bg-blend-luminosity duration-1000 ease-in-out group-hover:scale-110"
      data-src="/gameplay.webp"
    >
    </div>
  </BentoItem>
  <BentoItem
    class="col-span-10 lg:col-span-6"
    title={i18n.BENTO_TITLE_3}
    subtitle={i18n.BENTO_SUBTITLE_3}
  >
    <div
      slot="image"
      class="background transition-scale absolute bottom-0 left-0 top-0
        -z-10 h-full w-full bg-black
        bg-cover bg-center bg-no-repeat opacity-90 bg-blend-luminosity duration-1000 ease-in-out group-hover:scale-110"
      data-src="/nissar_gtr.webp"
    >
    </div>
  </BentoItem>
  <BentoItem class="col-span-10 lg:col-span-4" title={i18n.BENTO_TITLE_4}>
    <div
      slot="image"
      class="background transition-scale absolute bottom-0 left-0 top-0
        -z-10 h-full w-full bg-black
        bg-cover bg-center bg-no-repeat opacity-90 bg-blend-luminosity duration-1000 ease-in-out group-hover:scale-110"
      data-src="/MercedezBenz.webp"
    >
    </div>
  </BentoItem>
</section>

<script>
  document.addEventListener("astro:page-load", () => {
    const backgrounds = document.querySelectorAll(
      ".background"
    ) as NodeListOf<HTMLElement>;

    if (window.IntersectionObserver == null) {
      backgrounds.forEach((bkg) => {
        bkg.style.backgroundImage = "url('" + bkg.dataset.src + "')";
      });
      return;
    }

    function handleIntersection(entries: IntersectionObserverEntry[]) {
      entries.map((entry) => {
        if (entry.isIntersecting) {
          const target = entry.target as HTMLElement;
          const { style, dataset } = target;
          // Item has crossed our observation
          // threshold - load src from data-src
          style.backgroundImage = "url('" + dataset.src + "')";
          // Job done for this item - no need to watch it!
          observer.unobserve(entry.target);
        }
      });
    }

    const observer = new IntersectionObserver(handleIntersection, {
      rootMargin: "100px",
    });

    backgrounds.forEach((bkg) => observer.observe(bkg));
  });
</script>
